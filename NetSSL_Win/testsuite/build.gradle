import org.pocoproject.nativeplatform.test.cppunit.CppUnitTestSuiteSpec

model {
	components {
		withType(NativeComponentSpec) {
			binaries.withType(NativeBinarySpec) {
				if (buildType == buildTypes.debug) {
					if (it instanceof NativeExecutableBinarySpec) {
						executable.file = toLocalBin(appendDebugSuffix(executable.file), targetPlatform)
					}
				} else
				if (buildType == buildTypes.release) {
					if (it instanceof NativeExecutableBinarySpec) {
						executable.file = toLocalBin(executable.file, targetPlatform)
					} 
				}
			}
		}
		TestSuite(NativeExecutableSpec) {
			sources {
				cpp {
					source {
						srcDir 'src'
						include '**/*.cpp'
						exclude 'Win*Driver.cpp'
					}
					exportedHeaders {
						srcDir 'src'
					}
					lib project: ':CppUnit', library: 'CppUnit', linkage: 'shared'
					lib library: 'crypto', linkage: 'static'
					lib library: 'ssl', linkage: 'static'
					lib project: ':Crypto', library: 'Crypto', linkage: 'shared'
					lib project: ':Net', library: 'Net', linkage: 'shared'
					lib project: ':Util', library: 'Util', linkage: 'shared'
					lib project: ':Foundation', library: 'Foundation', linkage: 'shared'
					lib library: 'WS2_32', linkage: 'static'
				}
			}
		}
	}
	testSuites {
		NetSSLTestSuite(org.pocoproject.nativeplatform.test.cppunit.CppUnitTestSuiteSpec) {
			testing $.components.TestSuite 
		}
	}
}
tasks.withType(RunTestExecutable) {
	args "-print"
}


