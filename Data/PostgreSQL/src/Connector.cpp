//
// Connector.cpp
//
// $Id: //poco/1.4/Data/PostgreSQL/src/Connector.cpp#1 $
//
// Library: Data
// Package: PostgreSQL
// Module:  Connector
//
// Copyright (c) 2008, Applied Informatics Software Engineering GmbH.
// and Contributors.
//
// Permission is hereby granted, free of charge, to any person or organization
// obtaining a copy of the software and accompanying documentation covered by
// this license (the "Software") to use, reproduce, display, distribute,
// execute, and transmit the Software, and to prepare derivative works of the
// Software, and to permit third-parties to whom the Software is furnished to
// do so, all subject to the following:
// 
// The copyright notices in the Software and this entire statement, including
// the above license grant, this restriction and the following disclaimer,
// must be included in all copies of the Software, in whole or in part, and
// all derivative works of the Software, unless such copies or derivative
// works are solely in the form of machine-executable object code generated by
// a source language processor.
// 
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
// FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
// SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE
// FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
// ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
// DEALINGS IN THE SOFTWARE.
//


#include "Poco/Data/PostgreSQL/Connector.h"
#include "Poco/Data/PostgreSQL/SessionImpl.h"
#include "Poco/Data/SessionFactory.h"

const PostgreSQLConnectorRegistrator pocoPostgreSQLConnectorRegistrator;

namespace Poco {
namespace Data {
namespace PostgreSQL {

std::string Connector::KEY = POCO_DATA_POSTGRESQL_CONNECTOR_NAME;


Connector::Connector()
{
}


Connector::~Connector()
{
}

const std::string&
Connector::name() const
{
	static const std::string n(POCO_DATA_POSTGRESQL_CONNECTOR_NAME);
	return n;
}

Poco::AutoPtr<Poco::Data::SessionImpl>
Connector::createSession(const std::string& aConnectionString,
						 std::size_t aTimeout)
{
	return Poco::AutoPtr<Poco::Data::SessionImpl>(new SessionImpl(aConnectionString, aTimeout));
}

void Connector::registerConnector()
{
	Poco::Data::SessionFactory::instance().add(new Connector());
}

void Connector::unregisterConnector()
{
	Poco::Data::SessionFactory::instance().remove(POCO_DATA_POSTGRESQL_CONNECTOR_NAME);
}


} } } // namespace Poco::Data::PostgreSQL

