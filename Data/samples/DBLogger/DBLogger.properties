
#
# Database inserter (destination)
#

#
# Destination database parameters:
#
# (Mandatory) Database connector (for example sqlite)
#
DBLogger.connector = sqlite

#
# (Mandatory) Database connection string (connector specific)
#
DBLogger.constring = demo-logs.db3

#
# (Optional) Number of workers to insert logs into the database in parallel (default = 2)
#
# DBLogger.workers = 2

# ----------------------------------------------------------------

#
# (Optional) Create demo SQL messages for testing purposes (default = false)
#
DBLogger.demo = true

logging.loggers.root.channel = console
logging.loggers.root.level = information

logging.channels.console.class = ColorConsoleChannel
logging.channels.console.pattern = %L%Y-%m-%d %H:%M:%S.%i [%p] : %t

#
# SQL logger to create demo messages
# NOTE: Do not rename the logger.
#

logging.loggers.sqldemo.channel = sql
logging.loggers.sqldemo.name = SQLDemo
logging.loggers.sqldemo.level = debug

logging.channels.sql.class = SQLChannel
logging.channels.sql.name = DBLogger

#
# (Mandatory) Directory to scan for .sql files
#
logging.channels.sql.directory = .

#
# NOTE: Do not configure database to create SQL logger files
#
# logging.channels.sql.connector = SQLite
# logging.channels.sql.connect = DBLogger.db3

logging.channels.sql.timeout = 3000
logging.channels.sql.minBatch = 5
logging.channels.sql.maxBatch = 1000
logging.channels.sql.bulk = true
logging.channels.sql.table = T_LOG

logging.channels.sql.throw = false
logging.channels.sql.file = ${application.baseName}.sql

