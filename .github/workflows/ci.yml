name: poco-ci
on: [push, pull_request]
concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

jobs:
  linux-gcc-make:
    runs-on: ubuntu-22.04
    services:
      mysql:
        image: mysql:latest
        env:
          MYSQL_ALLOW_EMPTY_PASSWORD: yes
          MYSQL_USER: pocotest
          MYSQL_PASSWORD: pocotest
          MYSQL_DATABASE: pocotest
        ports:
          - 3306:3306
    steps:
      - uses: actions/checkout@v3
      - run: sudo apt -y update && sudo apt -y install libssl-dev unixodbc-dev redis-server libmysqlclient-dev
      - run: ./configure --everything --omit=PDF && make all -s -j4 && sudo make install
      - run: >-
          sudo -s
          EXCLUDE_TESTS="Data/ODBC Data/PostgreSQL MongoDB"
          ./ci/runtests.sh

  linux-gcc-make-cxx20:
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v3
      - run: sudo apt -y update && sudo apt -y install libssl-dev unixodbc-dev redis-server libmysqlclient-dev
      - run: ./configure --config=Linux-c++20 --everything --omit=PDF && make all -s -j4 && sudo make install
      - run: >-
          sudo -s
          EXCLUDE_TESTS="Data/ODBC Data/MySQL Data/PostgreSQL MongoDB"
          ./ci/runtests.sh

  linux-gcc-make-asan:
    runs-on: ubuntu-22.04
    services:
      mysql:
        image: mysql:latest
        env:
          MYSQL_ALLOW_EMPTY_PASSWORD: yes
          MYSQL_USER: pocotest
          MYSQL_PASSWORD: pocotest
          MYSQL_DATABASE: pocotest
        ports:
          - 3306:3306
    steps:
      - uses: actions/checkout@v3
      - run: sudo apt -y update && sudo apt -y install libssl-dev unixodbc-dev libmysqlclient-dev redis-server
      - run: ./configure --everything --no-samples --omit=PDF && make all -s -j4 SANITIZEFLAGS=-fsanitize=address && sudo make install
      - run: >-
          sudo -s
          EXCLUDE_TESTS="Data/ODBC Data/PostgreSQL MongoDB"
          ./ci/runtests.sh

  linux-gcc-make-asan-no-soo:
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v3
      - run: sudo apt -y update && sudo apt -y install libssl-dev unixodbc-dev libmysqlclient-dev redis-server
      - run: ./configure --everything --no-samples --omit=PDF --no-soo && make all -s -j4 SANITIZEFLAGS=-fsanitize=address && sudo make install
      - run: >-
          sudo -s
          EXCLUDE_TESTS="Data/MySQL Data/ODBC Data/PostgreSQL MongoDB"
          ./ci/runtests.sh

  linux-gcc-make-ubsan:
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v3
      - run: sudo apt -y update && sudo apt -y install libssl-dev unixodbc-dev libmysqlclient-dev redis-server
      - run: ./configure --everything --no-samples --omit=PDF && make all -s -j4 SANITIZEFLAGS=-fsanitize=undefined && sudo make install
      - run: >-
          sudo -s
          EXCLUDE_TESTS="Data/MySQL Data/ODBC Data/PostgreSQL MongoDB"
          ./ci/runtests.sh

  linux-gcc-make-tsan:
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v3
      - run: sudo apt -y update && sudo apt -y install libssl-dev unixodbc-dev libmysqlclient-dev redis-server
      - run: ./configure --everything --no-samples --omit=CppParser,Encodings,Data/MySQL,Data/ODBC,Data/PostgreSQL,MongoDB,PageCompiler,PDF,PocoDoc,ProGen,Redis,SevenZip && make all -s -j4 SANITIZEFLAGS=-fsanitize=thread && sudo make install
      - run: >-
          sudo -s
          ./ci/runtests.sh TSAN

  linux-gcc-cmake:
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v3
      - run: sudo apt -y update && sudo apt -y install cmake ninja-build libssl-dev unixodbc-dev libmysqlclient-dev redis-server
      - run: cmake -H. -Bcmake-build -GNinja -DENABLE_PDF=OFF -DENABLE_TESTS=ON && cmake --build cmake-build --target all
      - run: >-
          cd cmake-build &&
          sudo -s
          PWD=`pwd`
          ctest --output-on-failure -E "(DataMySQL)|(DataODBC)|(PostgreSQL)|(MongoDB)"

  linux-gcc-make-cross-armhf:
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v3
      - run: >-
          sudo apt-get -y update &&
          sudo apt-get -y install crossbuild-essential-armhf
      - run: >-
          ./configure --config=ARM-Linux --everything --omit=PDF,Crypto,NetSSL_OpenSSL,JWT,Data/MySQL,Data/ODBC,Data/PostgreSQL,PageCompiler,PageCompiler/File2Page &&
          make all -s -j4 ARCHFLAGS="-mcpu=cortex-a8 -mfloat-abi=hard -mfpu=neon" TOOL=arm-linux-gnueabihf

  macos-clang-make:
    runs-on: macos-12
    steps:
      - uses: actions/checkout@v3
      - run: brew install openssl@1.1 mysql-client unixodbc libpq
      - run: >-
          ./configure --everything --no-prefix --omit=PDF 
          --odbc-include=/usr/local/opt/unixodbc/include --odbc-lib=/usr/local/opt/unixodbc/lib
          --mysql-include=/usr/local/opt/mysql-client/include --mysql-lib=/usr/local/opt/mysql-client/lib &&
          make all -s -j4
      - run: >-
          sudo -s
          CPPUNIT_IGNORE="
          CppUnit::TestCaller<ThreadTest>.testTrySleep,
          CppUnit::TestCaller<TimestampTest>.testTimestamp,
          CppUnit::TestCaller<ExpireLRUCacheTest>.testExpireN,
          CppUnit::TestCaller<ExpireLRUCacheTest>.testAccessExpireN,
          CppUnit::TestCaller<UniqueExpireLRUCacheTest>.testExpireN,
          CppUnit::TestCaller<ExpireLRUCacheTest>.testAccessExpireN,
          CppUnit::TestCaller<PollSetTest>.testPollClosedServer"
          EXCLUDE_TESTS="Redis Data/MySQL Data/ODBC Data/PostgreSQL MongoDB PDF"
          ./ci/runtests.sh

  macos-clang-cmake:
    runs-on: macos-12
    steps:
      - uses: actions/checkout@v3
      - run: brew install openssl@1.1 mysql-client unixodbc libpq
      - run: cmake -H. -Bcmake-build -DENABLE_PDF=OFF -DENABLE_TESTS=ON -DOPENSSL_ROOT_DIR=/usr/local/opt/openssl@1.1 -DMYSQL_ROOT_DIR=/usr/local/opt/mysql-client && cmake --build cmake-build --target all
      - run: >-
          cd cmake-build &&
          sudo -s
          CPPUNIT_IGNORE="
          CppUnit::TestCaller<ThreadTest>.testTrySleep,
          CppUnit::TestCaller<TimestampTest>.testTimestamp,
          CppUnit::TestCaller<ExpireLRUCacheTest>.testExpireN,
          CppUnit::TestCaller<ExpireLRUCacheTest>.testAccessExpireN,
          CppUnit::TestCaller<UniqueExpireLRUCacheTest>.testExpireN,
          CppUnit::TestCaller<ExpireLRUCacheTest>.testAccessExpireN,
          CppUnit::TestCaller<PollSetTest>.testPollClosedServer"
          PWD=`pwd`
          ctest --output-on-failure -E "(DataMySQL)|(DataODBC)|(PostgreSQL)|(MongoDB)|(Redis)"

  macos-clang-cmake-openssl3:
    runs-on: macos-12
    steps:
      - uses: actions/checkout@v3
      - run: brew install openssl@3 mysql-client unixodbc libpq
      - run: cmake -H. -Bcmake-build -DENABLE_PDF=OFF -DENABLE_TESTS=ON -DOPENSSL_ROOT_DIR=/usr/local/opt/openssl@3 -DMYSQL_ROOT_DIR=/usr/local/opt/mysql-client && cmake --build cmake-build --target all
      - run: >-
          cd cmake-build &&
          sudo -s
          CPPUNIT_IGNORE="
          CppUnit::TestCaller<ThreadTest>.testTrySleep,
          CppUnit::TestCaller<TimestampTest>.testTimestamp,
          CppUnit::TestCaller<ExpireLRUCacheTest>.testExpireN,
          CppUnit::TestCaller<ExpireLRUCacheTest>.testAccessExpireN,
          CppUnit::TestCaller<UniqueExpireLRUCacheTest>.testExpireN,
          CppUnit::TestCaller<ExpireLRUCacheTest>.testAccessExpireN,
          CppUnit::TestCaller<PollSetTest>.testPollClosedServer"
          PWD=`pwd`
          ctest --output-on-failure -E "(DataMySQL)|(DataODBC)|(PostgreSQL)|(MongoDB)|(Redis)"

  windows-2019-msvc-cmake:
    runs-on: windows-2019
    env:
      CPPUNIT_IGNORE: >-
        class CppUnit::TestCaller<class PathTest>.testFind,
        class CppUnit::TestCaller<class ICMPSocketTest>.testSendToReceiveFrom,
        class CppUnit::TestCaller<class ICMPClientTest>.testPing,
        class CppUnit::TestCaller<class ICMPClientTest>.testBigPing,
        class CppUnit::TestCaller<class ICMPSocketTest>.testMTU,
        class CppUnit::TestCaller<class HTTPSClientSessionTest>.testProxy,
        class CppUnit::TestCaller<class HTTPSStreamFactoryTest>.testProxy,
        class CppUnit::TestCaller<class PollSetTest>.testPollClosedServer
    steps:
      - uses: actions/checkout@v3
      - run: cmake -S. -Bcmake-build -DENABLE_NETSSL_WIN=ON -DENABLE_NETSSL=OFF -DENABLE_CRYPTO=OFF -DENABLE_JWT=OFF -DENABLE_DATA=ON -DENABLE_DATA_ODBC=ON -DENABLE_DATA_MYSQL=OFF -DENABLE_DATA_POSTGRESQL=OFF -DENABLE_TESTS=ON
      - run: cmake --build cmake-build --config Release
      - run: >-
          cd cmake-build;
          ctest --output-on-failure -E "(DataMySQL)|(DataODBC)|(Redis)|(MongoDB)" -C Release
          
  windows-2019-msvc-buildwin-x64:
    runs-on: windows-2019
    env:
      CPPUNIT_IGNORE: >-
        class CppUnit::TestCaller<class PathTest>.testFind,
        class CppUnit::TestCaller<class ICMPSocketTest>.testSendToReceiveFrom,
        class CppUnit::TestCaller<class ICMPClientTest>.testPing,
        class CppUnit::TestCaller<class ICMPClientTest>.testBigPing,
        class CppUnit::TestCaller<class ICMPSocketTest>.testMTU,
        class CppUnit::TestCaller<class HTTPSClientSessionTest>.testProxy,
        class CppUnit::TestCaller<class HTTPSStreamFactoryTest>.testProxy
    steps:
      - uses: actions/checkout@v3
      - run: .\buildwin.ps1 -poco_base . -vs 160 -action build -linkmode all -config release -platform x64 -samples -tests -omit "Crypto,NetSSL_OpenSSL,Data/MySQL,Data/PostgreSQL,JWT"
      
#  windows-2019-msvc-buildwin-win32:
#    runs-on: windows-2019
#    env:
#      CPPUNIT_IGNORE: class CppUnit::TestCaller<class PathTest>.testFind,class CppUnit::TestCaller<class ICMPSocketTest>.testSendToReceiveFrom,class CppUnit::TestCaller<class ICMPClientTest>.testPing,class CppUnit::TestCaller<class ICMPClientTest>.testBigPing,class CppUnit::TestCaller<class ICMPSocketTest>.testMTU,class CppUnit::TestCaller<class HTTPSClientSessionTest>.testProxy,class CppUnit::TestCaller<class HTTPSStreamFactoryTest>.testProxy
#    steps:
#      - uses: actions/checkout@v3
#      - run: .\buildwin.ps1 -poco_base . -vs 160 -action build -linkmode all -config release -platform Win32 -samples -tests -omit "Crypto,NetSSL_OpenSSL,Data/MySQL,Data/PostgreSQL,JWT"

  windows-2022-msvc-buildwin-x64:
    runs-on: windows-2022
    env:
      CPPUNIT_IGNORE: >-
        class CppUnit::TestCaller<class PathTest>.testFind,
        class CppUnit::TestCaller<class ICMPSocketTest>.testSendToReceiveFrom,
        class CppUnit::TestCaller<class ICMPClientTest>.testPing,
        class CppUnit::TestCaller<class ICMPClientTest>.testBigPing,
        class CppUnit::TestCaller<class ICMPSocketTest>.testMTU,
        class CppUnit::TestCaller<class HTTPSClientSessionTest>.testProxy,
        class CppUnit::TestCaller<class HTTPSStreamFactoryTest>.testProxy
    steps:
      - uses: actions/checkout@v3
      - run: .\buildwin.ps1 -poco_base . -vs 170 -action build -linkmode all -config release -platform x64 -samples -tests -omit "Crypto,NetSSL_OpenSSL,Data/MySQL,Data/PostgreSQL,JWT"

#  windows-2022-msvc-buildwin-win32:
#    runs-on: windows-2022
#    env:
#      CPPUNIT_IGNORE: >-
#        class CppUnit::TestCaller<class PathTest>.testFind,
#        class CppUnit::TestCaller<class ICMPSocketTest>.testSendToReceiveFrom,
#        class CppUnit::TestCaller<class ICMPClientTest>.testPing,
#        class CppUnit::TestCaller<class ICMPClientTest>.testBigPing,
#        class CppUnit::TestCaller<class ICMPSocketTest>.testMTU,
#        class CppUnit::TestCaller<class HTTPSClientSessionTest>.testProxy,
#        class CppUnit::TestCaller<class HTTPSStreamFactoryTest>.testProxy
#    steps:
#      - uses: actions/checkout@v3
#      - run: .\buildwin.ps1 -poco_base . -vs 170 -action build -linkmode all -config release -platform Win32 -samples -tests -omit "Crypto,NetSSL_OpenSSL,Data/MySQL,Data/PostgreSQL,JWT"

  windows-2022-msvc-cmake:
    runs-on: windows-2022
    env:
      CPPUNIT_IGNORE: >-
        class CppUnit::TestCaller<class PathTest>.testFind,
        class CppUnit::TestCaller<class ICMPSocketTest>.testSendToReceiveFrom,
        class CppUnit::TestCaller<class ICMPClientTest>.testPing,
        class CppUnit::TestCaller<class ICMPClientTest>.testBigPing,
        class CppUnit::TestCaller<class ICMPSocketTest>.testMTU,
        class CppUnit::TestCaller<class HTTPSClientSessionTest>.testProxy,
        class CppUnit::TestCaller<class HTTPSStreamFactoryTest>.testProxy
    steps:
      - uses: actions/checkout@v3
      - run: cmake -S. -Bcmake-build -DENABLE_NETSSL_WIN=ON -DENABLE_NETSSL=OFF -DENABLE_CRYPTO=OFF -DENABLE_JWT=OFF -DENABLE_DATA=ON -DENABLE_DATA_ODBC=ON -DENABLE_DATA_MYSQL=OFF -DENABLE_DATA_POSTGRESQL=OFF -DENABLE_TESTS=ON
      - run: cmake --build cmake-build --config Release
      - run: >-
          cd cmake-build;
          ctest --output-on-failure -E "(DataMySQL)|(DataODBC)|(Redis)|(MongoDB)" -C Release

# missing asan dll path
#  windows-2022-msvc-cmake-asan:
#    runs-on: windows-2022
#    env:
#      CPPUNIT_IGNORE: >-
#        class CppUnit::TestCaller<class PathTest>.testFind,
#        class CppUnit::TestCaller<class ICMPSocketTest>.testSendToReceiveFrom,
#        class CppUnit::TestCaller<class ICMPClientTest>.testPing,
#        class CppUnit::TestCaller<class ICMPClientTest>.testBigPing,
#        class CppUnit::TestCaller<class ICMPSocketTest>.testMTU,
#        class CppUnit::TestCaller<class HTTPSClientSessionTest>.testProxy,
#        class CppUnit::TestCaller<class HTTPSStreamFactoryTest>.testProxy
#    steps:
#      - uses: actions/checkout@v3
#      - run: cmake -S. -Bcmake-build -DPOCO_SANITIZE_ASAN=ON -DENABLE_NETSSL_WIN=ON -DENABLE_NETSSL=OFF -DENABLE_CRYPTO=OFF -DENABLE_JWT=OFF -DENABLE_DATA=ON -DENABLE_DATA_ODBC=ON -DENABLE_DATA_MYSQL=OFF -DENABLE_DATA_POSTGRESQL=OFF -DENABLE_TESTS=ON
#      - run: cmake --build cmake-build --config Debug
#      - run: >-
#          cd cmake-build;
#          ctest --output-on-failure -E "(DataMySQL)|(DataODBC)|(Redis)|(MongoDB)" -C Debug
