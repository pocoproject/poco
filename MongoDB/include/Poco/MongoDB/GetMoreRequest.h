//
// GetMoreRequest.h
//
// $Id$
//
// Library: MongoDB
// Package: MongoDB
// Module:  GetMoreRequest
//
// Definition of the GetMoreRequest class.
//
// Copyright (c) 2012, Applied Informatics Software Engineering GmbH.
// and Contributors.
//
// Permission is hereby granted, free of charge, to any person or organization
// obtaining a copy of the software and accompanying documentation covered by
// this license (the "Software") to use, reproduce, display, distribute,
// execute, and transmit the Software, and to prepare derivative works of the
// Software, and to permit third-parties to whom the Software is furnished to
// do so, all subject to the following:
//
// The copyright notices in the Software and this entire statement, including
// the above license grant, this restriction and the following disclaimer,
// must be included in all copies of the Software, in whole or in part, and
// all derivative works of the Software, unless such copies or derivative
// works are solely in the form of machine-executable object code generated by
// a source language processor.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
// FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
// SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE
// FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
// ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
// DEALINGS IN THE SOFTWARE.
//


#ifndef MongoDB_GetMoreRequest_INCLUDED
#define MongoDB_GetMoreRequest_INCLUDED


#include "Poco/MongoDB/MongoDB.h"
#include "Poco/MongoDB/RequestMessage.h"


namespace Poco {
namespace MongoDB {


class MongoDB_API GetMoreRequest : public RequestMessage
	/// Class for creating an OP_GETMORE client request. This request is used
	/// to query the database for more documents in a collection after
	/// a query request is send.
{
public:
	GetMoreRequest(const std::string& collectionName, Int64 cursorID);
		/// Constructor. The full collection name is the concatenation of the database 
		/// name with the collection name, using a "." for the concatenation. For example, 
		/// for the database "foo" and the collection "bar", the full collection name is 
		/// "foo.bar". The cursorID has been returned by the response on the query request.
		/// By default the numberToReturn is set to 100.


	virtual ~GetMoreRequest();
		/// Destructor

	Int32 getNumberToReturn() const;
		/// Returns the limit of returned documents

	void setNumberToReturn(Int32 n);
		/// Sets the limit of returned documents

	Int64 cursorID() const;
		/// Returns the cursor id

protected:
	void buildRequest(BinaryWriter& writer);

private:
	Int32 _flags;
	std::string _fullCollectionName;
	Int32 _numberToReturn;
	Int64 _cursorID;
};


//
// inlines
//
inline Int32 GetMoreRequest::getNumberToReturn() const
{
	return _numberToReturn;
}


inline void GetMoreRequest::setNumberToReturn(Int32 n)
{
	_numberToReturn = n;
}


inline Int64 GetMoreRequest::cursorID() const
{
	return _cursorID;
}


} } // namespace Poco::MongoDB


#endif //MongoDB_GetMoreRequest_INCLUDED
