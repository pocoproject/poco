//
// AndroidLogChannel.h
//
// $Id$
//
// Library: Foundation
// Package: Logging
// Module:  AndroidLogChannel
//
// Definition of the AndroidLogChannel class specific to Android.
//
// Copyright (c) 2004-2013, Applied Informatics Software Engineering GmbH.
// and Contributors.
//
// Permission is hereby granted, free of charge, to any person or organization
// obtaining a copy of the software and accompanying documentation covered by
// this license (the "Software") to use, reproduce, display, distribute,
// execute, and transmit the Software, and to prepare derivative works of the
// Software, and to permit third-parties to whom the Software is furnished to
// do so, all subject to the following:
//
// The copyright notices in the Software and this entire statement, including
// the above license grant, this restriction and the following disclaimer,
// must be included in all copies of the Software, in whole or in part, and
// all derivative works of the Software, unless such copies or derivative
// works are solely in the form of machine-executable object code generated by
// a source language processor.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
// FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
// SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE
// FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
// ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
// DEALINGS IN THE SOFTWARE.
//


#ifndef Foundation_AndroidLogChannel_INCLUDED
#define Foundation_AndroidLogChannel_INCLUDED


#include "Poco/Foundation.h"
#include "Poco/Channel.h"
#include "Poco/Message.h"
#include <android/log.h>


namespace Poco {


class Foundation_API AndroidLogChannel: public Channel
	/// This Android-only channel works with the Android log service.
{
public:
	AndroidLogChannel() : _tag("TagUndefined")
		/// Creates a AndroidLogChannel.
	{
	}

	AndroidLogChannel(const std::string& tag) : _tag(tag)
		/// Creates a AndroidLogChannel with the given tag.
	{
	}

	void log(const Message& msg)
		/// Sends the message's text to the Android log service.
	{
		static int pocoPrioToAndroidPrio[] =
		{
			ANDROID_LOG_UNKNOWN,
			ANDROID_LOG_FATAL,
			ANDROID_LOG_FATAL,
			ANDROID_LOG_ERROR,
			ANDROID_LOG_WARN,
			ANDROID_LOG_INFO,
			ANDROID_LOG_INFO,
			ANDROID_LOG_DEBUG,
			ANDROID_LOG_VERBOSE
		};

		__android_log_write(pocoPrioToAndroidPrio[msg.getPriority()], _tag.c_str(), msg.getText().c_str());
	}

	void setProperty(const std::string& name, const std::string& value)
		/// Sets the property with the given value.
		///
		/// The following properties are supported:
		///     * tag: The Android logging tag.
	{
		if (name == "tag")
		{
			_tag = value;
		}
		else
		{
			Channel::setProperty(name, value);
		}
	}

	std::string getProperty(const std::string& name) const
		/// Returns the value of the property with the given name.
	{
		if (name == "tag")
		{
			return _tag;
		}
		else
		{
			return Channel::getProperty(name);
		}
	}

private:
	std::string _tag;
};


} // namespace Poco


#endif // Foundation_AndroidLogChannel_INCLUDED
