model {
	components {
		Net(NativeLibrarySpec) {
			sources {
				rc {
					source {
						srcDir '..'
						include 'DLLVersion.rc'
					}
				}
				cpp {
					source {
						srcDir 'src'
						include '**/*.cpp'
					}
					exportedHeaders {
						srcDir 'include'
					}
				}
			}
		}
	}
	binaries {
		all {
			if (targetPlatform.operatingSystem.windows) {
				linker.args "ws2_32.lib"
				linker.args "iphlpapi.lib"
			}
		}
		withType(SharedLibraryBinarySpec) {
			lib project: ':Foundation', library: 'Foundation', linkage: 'shared'
			if (toolChain in VisualCpp) {
				 cppCompiler.define "Net_EXPORTS"
			}
		}
		withType(StaticLibraryBinarySpec) {
			lib project: ':Foundation', library: 'Foundation', linkage: 'static'
		}
	}
}


