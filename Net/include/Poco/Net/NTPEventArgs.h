//
// NTPEventArgs.h
//
// $Id: //poco/1.4/Net/include/Poco/Net/NTPEventArgs.h#1 $
//
// Library: Net
// Package: NTP
// Module:  NTPEventArgs
//
// Definition of NTPEventArgs.
//
// Copyright (c) 2006, Applied Informatics Software Engineering GmbH.
// and Contributors.
//
// Permission is hereby granted, free of charge, to any person or organization
// obtaining a copy of the software and accompanying documentation covered by
// this license (the "Software") to use, reproduce, display, distribute,
// execute, and transmit the Software, and to prepare derivative works of the
// Software, and to permit third-parties to whom the Software is furnished to
// do so, all subject to the following:
// 
// The copyright notices in the Software and this entire statement, including
// the above license grant, this restriction and the following disclaimer,
// must be included in all copies of the Software, in whole or in part, and
// all derivative works of the Software, unless such copies or derivative
// works are solely in the form of machine-executable object code generated by
// a source language processor.
// 
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
// FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
// SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE
// FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
// ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
// DEALINGS IN THE SOFTWARE.
//


#ifndef Net_NTPEventArgs_INCLUDED
#define Net_NTPEventArgs_INCLUDED


#include "Poco/Net/Net.h"
#include "Poco/Net/SocketAddress.h"
#include "Poco/Net/NTPPacket.h"


namespace Poco {
namespace Net {


class Net_API NTPEventArgs
	/// The purpose of the NTPEventArgs class is to be used as template parameter
	/// to instantiate event members in NTPClient class.
	/// When clients register for an event notification, the reference to the class is 
	///	passed to the handler function to provide information about the event.
{
public:
	NTPEventArgs(const SocketAddress& address);
		/// Creates NTPEventArgs.

	virtual ~NTPEventArgs();
		/// Destroys NTPEventArgs.

	std::string hostName() const;
		/// Tries to resolve the target IP address into host name.
		/// If unsuccessful, all exceptions are silently ignored and 
		///	the IP address is returned.

	std::string hostAddress() const;
		/// Returns the target IP address.

	const NTPPacket &packet();
		/// Returns the NTP packet.

private:
	NTPEventArgs();

	void setPacket(NTPPacket &packet);

	SocketAddress _address;
	NTPPacket _packet;

	friend class NTPClient;
};


//
// inlines
//
inline const NTPPacket &NTPEventArgs::packet()
{
	return _packet;
}


inline void NTPEventArgs::setPacket(NTPPacket &packet)
{
	_packet = packet;
}


} } // namespace Poco::Net


#endif
