#
# Linux
#
# Make settings for Linux g++ sanitize thread
#
#

#
# General Settings
#
LINKMODE ?= SHARED

#
# Define Tools
#
ifeq ($(origin CROSS_COMPILE), undefined)
	CC	    ?=gcc
	CXX	    ?=g++
	LIB     = ar -cr
	RANLIB  = ranlib
	STRIP   = strip
else
	CC      = ${CROSS_COMPILE}gcc
	CXX     = ${CROSS_COMPILE}g++
	LIB     = ${CROSS_COMPILE}ar -cr
	RANLIB  = ${CROSS_COMPILE}ranlib
	STRIP   = ${CROSS_COMPILE}strip
endif
LINK    = $(CXX)
SHLIB   = $(CXX) -shared -Wl,-soname,$(notdir $@) -o $@
SHLIBLN = $(POCO_BASE)/build/script/shlibln
DEP     = $(POCO_BASE)/build/script/makedepend.gcc
SHELL   = sh
RM      = rm -rf
CP      = cp
MKDIR   = mkdir -p

#
# Extension for Shared Libraries
#
SHAREDLIBEXT     = .so.$(target_version)
SHAREDLIBLINKEXT = .so

#
# Compiler and Linker Flags
#
CFLAGS          = -std=c99
CFLAGS32        =
CFLAGS64        =
CXXFLAGS        = -Wall -Wno-sign-compare -fsanitize=thread -fno-omit-frame-pointer -fno-optimize-sibling-calls
CXXFLAGS32      =
CXXFLAGS64      =
SHLIBFLAGS      =
SHLIBFLAGS32    =
SHLIBFLAGS64    =
LIBFLAGS        =
LIBFLAGS32      =
LIBFLAGS64      =
LINKFLAGS       = -fsanitize=thread -fno-omit-frame-pointer -fno-optimize-sibling-calls
LINKFLAGS32     =
LINKFLAGS64     =
STATICOPT_CC    =
STATICOPT_CXX   =
STATICOPT_LINK  =
SHAREDOPT_CC    = -fPIC
SHAREDOPT_CXX   = -fPIC
SHAREDOPT_LINK  = -Wl,-rpath,$(LIBPATH)
DEBUGOPT_CC     = -g -D_DEBUG
DEBUGOPT_CXX    = -g -D_DEBUG
DEBUGOPT_LINK   = -g
RELEASEOPT_CC   = -O2 -DNDEBUG
RELEASEOPT_CXX  = -O2 -DNDEBUG
RELEASEOPT_LINK = -O2

#
# System Specific Flags
#
SYSFLAGS = -D_XOPEN_SOURCE=600 -D_REENTRANT -D_THREAD_SAFE -D_FILE_OFFSET_BITS=64 -D_LARGEFILE64_SOURCE -DPOCO_HAVE_FD_EPOLL -DPOCO_HAVE_ADDRINFO -DPOCO_HAVE_LIBRESOLV

#
# System Specific Libraries
#
SYSLIBS  = -lrt -lpthread -ldl

#
# Auto-detect architecture if not specified
#
ifndef OSARCH_64BITS
  LBITS := $(shell getconf LONG_BIT)
  ifeq ($(LBITS),64)
    OSARCH_64BITS = 1
  else
    OSARCH_64BITS = 0
  endif
endif

#
# C++11/14 detection
#
include $(POCO_BASE)/build/script/cpp11-gcc
