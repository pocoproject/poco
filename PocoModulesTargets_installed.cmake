# Generated by CMake

if("${CMAKE_MAJOR_VERSION}.${CMAKE_MINOR_VERSION}" LESS 2.8)
   message(FATAL_ERROR "CMake >= 2.8.12 required")
endif()
if(CMAKE_VERSION VERSION_LESS "2.8.12")
   message(FATAL_ERROR "CMake >= 2.8.12 required")
endif()
cmake_policy(PUSH)
cmake_policy(VERSION 2.8.12...3.31)
#----------------------------------------------------------------
# Generated CMake target import file.
#----------------------------------------------------------------

# Commands may need to know the format version.
set(CMAKE_IMPORT_FILE_VERSION 1)

# Protect against multiple inclusion, which would fail when already imported targets are added once more.
set(_cmake_targets_defined "")
set(_cmake_targets_not_defined "")
set(_cmake_expected_targets "")
foreach(_cmake_expected_target IN ITEMS Poco::Modules)
  list(APPEND _cmake_expected_targets "${_cmake_expected_target}")
  if(TARGET "${_cmake_expected_target}")
    list(APPEND _cmake_targets_defined "${_cmake_expected_target}")
  else()
    list(APPEND _cmake_targets_not_defined "${_cmake_expected_target}")
  endif()
endforeach()
unset(_cmake_expected_target)
if(_cmake_targets_defined STREQUAL _cmake_expected_targets)
  unset(_cmake_targets_defined)
  unset(_cmake_targets_not_defined)
  unset(_cmake_expected_targets)
  unset(CMAKE_IMPORT_FILE_VERSION)
  cmake_policy(POP)
  return()
endif()
if(NOT _cmake_targets_defined STREQUAL "")
  string(REPLACE ";" ", " _cmake_targets_defined_text "${_cmake_targets_defined}")
  string(REPLACE ";" ", " _cmake_targets_not_defined_text "${_cmake_targets_not_defined}")
  message(FATAL_ERROR "Some (but not all) targets in this export set were already defined.\nTargets Defined: ${_cmake_targets_defined_text}\nTargets not yet defined: ${_cmake_targets_not_defined_text}\n")
endif()
unset(_cmake_targets_defined)
unset(_cmake_targets_not_defined)
unset(_cmake_expected_targets)


# Compute the installation prefix relative to this file.
get_filename_component(_IMPORT_PREFIX "${CMAKE_CURRENT_LIST_FILE}" PATH)
get_filename_component(_IMPORT_PREFIX "${_IMPORT_PREFIX}" PATH)
get_filename_component(_IMPORT_PREFIX "${_IMPORT_PREFIX}" PATH)
get_filename_component(_IMPORT_PREFIX "${_IMPORT_PREFIX}" PATH)
if(_IMPORT_PREFIX STREQUAL "/")
  set(_IMPORT_PREFIX "")
endif()

# Create imported target Poco::Modules
add_library(Poco::Modules SHARED IMPORTED)

set_target_properties(Poco::Modules PROPERTIES
  CXX_MODULE_STD ""
  IMPORTED_CXX_MODULES_COMPILE_DEFINITIONS "ENABLE_FOUNDATION;ENABLE_ENCODINGS;ENABLE_ACTIVERECORD;ENABLE_CRYPTO;ENABLE_DATA;ENABLE_DATA_MYSQL;ENABLE_DATA_ODBC;ENABLE_DATA_POSTGRESQL;ENABLE_DATA_SQLITE;ENABLE_JSON;ENABLE_JWT;ENABLE_MONGODB;ENABLE_NET;ENABLE_PROMETHEUS;ENABLE_REDIS;ENABLE_UTIL;ENABLE_XML;ENABLE_ZIP;POCO_DLL;POCO_CMAKE"
  IMPORTED_CXX_MODULES_COMPILE_FEATURES "cxx_std_20"
  IMPORTED_CXX_MODULES_INCLUDE_DIRECTORIES "${_IMPORT_PREFIX}/include;${_IMPORT_PREFIX}/include"
  IMPORTED_CXX_MODULES_LINK_LIBRARIES "Poco::Foundation;Poco::Encodings;Poco::ActiveRecord;Poco::Crypto;Poco::Data;Poco::DataMySQL;Poco::DataODBC;Poco::DataPostgreSQL;Poco::DataSQLite;Poco::JSON;Poco::JWT;Poco::MongoDB;Poco::Net;Poco::Prometheus;Poco::Redis;Poco::Util;Poco::XML;Poco::Zip"
  INTERFACE_COMPILE_DEFINITIONS "ENABLE_FOUNDATION;ENABLE_ENCODINGS;ENABLE_ACTIVERECORD;ENABLE_CRYPTO;ENABLE_DATA;ENABLE_DATA_MYSQL;ENABLE_DATA_ODBC;ENABLE_DATA_POSTGRESQL;ENABLE_DATA_SQLITE;ENABLE_JSON;ENABLE_JWT;ENABLE_MONGODB;ENABLE_NET;ENABLE_PROMETHEUS;ENABLE_REDIS;ENABLE_UTIL;ENABLE_XML;ENABLE_ZIP"
  INTERFACE_COMPILE_FEATURES "cxx_std_20"
  INTERFACE_INCLUDE_DIRECTORIES "${_IMPORT_PREFIX}/include;${_IMPORT_PREFIX}/include"
  INTERFACE_LINK_LIBRARIES "Poco::Foundation;Poco::Encodings;Poco::ActiveRecord;Poco::Crypto;Poco::Data;Poco::DataMySQL;Poco::DataODBC;Poco::DataPostgreSQL;Poco::DataSQLite;Poco::JSON;Poco::JWT;Poco::MongoDB;Poco::Net;Poco::Prometheus;Poco::Redis;Poco::Util;Poco::XML;Poco::Zip"
)

if(NOT CMAKE_VERSION VERSION_LESS "3.23.0")
  target_sources(Poco::Modules
    INTERFACE
      FILE_SET "CXX_MODULES"
      TYPE "CXX_MODULES"
      BASE_DIRS "${_IMPORT_PREFIX}/lib/Poco/modules"
      FILES "${_IMPORT_PREFIX}/lib/Poco/modules/Poco.cppm" "${_IMPORT_PREFIX}/lib/Poco/modules/Poco/Foundation.cppm" "${_IMPORT_PREFIX}/lib/Poco/modules/Poco/Dynamic.cppm" "${_IMPORT_PREFIX}/lib/Poco/modules/Poco/ActiveRecord.cppm" "${_IMPORT_PREFIX}/lib/Poco/modules/Poco/Crypto.cppm" "${_IMPORT_PREFIX}/lib/Poco/modules/Poco/Data.cppm" "${_IMPORT_PREFIX}/lib/Poco/modules/Poco/JSON.cppm" "${_IMPORT_PREFIX}/lib/Poco/modules/Poco/JWT.cppm" "${_IMPORT_PREFIX}/lib/Poco/modules/Poco/MongoDB.cppm" "${_IMPORT_PREFIX}/lib/Poco/modules/Poco/Net.cppm" "${_IMPORT_PREFIX}/lib/Poco/modules/Poco/Prometheus.cppm" "${_IMPORT_PREFIX}/lib/Poco/modules/Poco/Redis.cppm" "${_IMPORT_PREFIX}/lib/Poco/modules/Poco/Util.cppm" "${_IMPORT_PREFIX}/lib/Poco/modules/Poco/XML.cppm" "${_IMPORT_PREFIX}/lib/Poco/modules/Poco/Zip.cppm" "${_IMPORT_PREFIX}/lib/Poco/modules/Poco/Data/MySQL.cppm" "${_IMPORT_PREFIX}/lib/Poco/modules/Poco/Data/ODBC.cppm" "${_IMPORT_PREFIX}/lib/Poco/modules/Poco/Data/PostgreSQL.cppm" "${_IMPORT_PREFIX}/lib/Poco/modules/Poco/Data/SQLite.cppm"
  )
else()
  set_property(TARGET Poco::Modules
    APPEND PROPERTY INTERFACE_INCLUDE_DIRECTORIES
  )
endif()

# Load information for each installed configuration.
file(GLOB _cmake_config_files "${CMAKE_CURRENT_LIST_DIR}/PocoModulesTargets-*.cmake")
foreach(_cmake_config_file IN LISTS _cmake_config_files)
  include("${_cmake_config_file}")
endforeach()
unset(_cmake_config_file)
unset(_cmake_config_files)

# Cleanup temporary variables.
set(_IMPORT_PREFIX)

# Loop over all imported files and verify that they actually exist
foreach(_cmake_target IN LISTS _cmake_import_check_targets)
  if(CMAKE_VERSION VERSION_LESS "3.28"
      OR NOT DEFINED _cmake_import_check_xcframework_for_${_cmake_target}
      OR NOT IS_DIRECTORY "${_cmake_import_check_xcframework_for_${_cmake_target}}")
    foreach(_cmake_file IN LISTS "_cmake_import_check_files_for_${_cmake_target}")
      if(NOT EXISTS "${_cmake_file}")
        message(FATAL_ERROR "The imported target \"${_cmake_target}\" references the file
   \"${_cmake_file}\"
but this file does not exist.  Possible reasons include:
* The file was deleted, renamed, or moved to another location.
* An install or uninstall procedure did not complete successfully.
* The installation package was faulty and contained
   \"${CMAKE_CURRENT_LIST_FILE}\"
but not all the files it references.
")
      endif()
    endforeach()
  endif()
  unset(_cmake_file)
  unset("_cmake_import_check_files_for_${_cmake_target}")
endforeach()
unset(_cmake_target)
unset(_cmake_import_check_targets)

# Make sure the targets which have been exported in some other
# export set exist.
unset(${CMAKE_FIND_PACKAGE_NAME}_NOT_FOUND_MESSAGE_targets)
foreach(_target "Poco::Foundation" "Poco::Encodings" "Poco::ActiveRecord" "Poco::Crypto" "Poco::Data" "Poco::DataMySQL" "Poco::DataODBC" "Poco::DataPostgreSQL" "Poco::DataSQLite" "Poco::JSON" "Poco::JWT" "Poco::MongoDB" "Poco::Net" "Poco::Prometheus" "Poco::Redis" "Poco::Util" "Poco::XML" "Poco::Zip" )
  if(NOT TARGET "${_target}" )
    set(${CMAKE_FIND_PACKAGE_NAME}_NOT_FOUND_MESSAGE_targets "${${CMAKE_FIND_PACKAGE_NAME}_NOT_FOUND_MESSAGE_targets} ${_target}")
  endif()
endforeach()

if(DEFINED ${CMAKE_FIND_PACKAGE_NAME}_NOT_FOUND_MESSAGE_targets)
  if(CMAKE_FIND_PACKAGE_NAME)
    set( ${CMAKE_FIND_PACKAGE_NAME}_FOUND FALSE)
    set( ${CMAKE_FIND_PACKAGE_NAME}_NOT_FOUND_MESSAGE "The following imported targets are referenced, but are missing: ${${CMAKE_FIND_PACKAGE_NAME}_NOT_FOUND_MESSAGE_targets}")
  else()
    message(FATAL_ERROR "The following imported targets are referenced, but are missing: ${${CMAKE_FIND_PACKAGE_NAME}_NOT_FOUND_MESSAGE_targets}")
  endif()
endif()
unset(${CMAKE_FIND_PACKAGE_NAME}_NOT_FOUND_MESSAGE_targets)

# Commands beyond this point should not need to know the version.
set(CMAKE_IMPORT_FILE_VERSION)
cmake_policy(POP)
